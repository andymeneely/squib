# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/rsvg2/all/rsvg2.rbi
#
# rsvg2-3.4.9

module Rsvg
  def self.cleanup(*arguments, &block); end
  def self.error_quark(*arguments, &block); end
  def self.set_default_dpi(*arguments, &block); end
  def self.set_default_dpi_x_y(*arguments, &block); end
end
class Rsvg::Loader < GObjectIntrospection::Loader
  def post_load(repository, namespace); end
  def require_libraries; end
end
module Cairo
end
class Cairo::Context
  def render_rsvg_handle(handle, options = nil); end
  def show_rsvg_handle(handle, options = nil); end
end
class Rsvg::DimensionData
  def em; end
  def em=(value); end
  def ex; end
  def ex=(value); end
  def height; end
  def height=(value); end
  def to_a; end
  def width; end
  def width=(value); end
end
class Rsvg::Handle < GLib::Object
  def _abi_padding; end
  def base_gfile=(*arguments, &block); end
  def base_uri(*arguments, &block); end
  def base_uri=(*arguments, &block); end
  def close(*arguments, &block); end
  def desc; end
  def dimensions(*arguments, &block); end
  def dpi=(*arguments, &block); end
  def dpi_x; end
  def dpi_x=(val); end
  def dpi_y; end
  def dpi_y=(val); end
  def em; end
  def ex; end
  def flags; end
  def get_dimensions_sub(*arguments, &block); end
  def get_pixbuf_sub(*arguments, &block); end
  def get_position_sub(*arguments, &block); end
  def has_sub?(*arguments, &block); end
  def height; end
  def initialize(options = nil); end
  def initialize_new(*arguments, &block); end
  def initialize_new_from_data(*arguments, &block); end
  def initialize_new_from_file(*arguments, &block); end
  def initialize_new_from_gfile_sync(*arguments, &block); end
  def initialize_new_from_stream_sync(*arguments, &block); end
  def initialize_new_with_flags(*arguments, &block); end
  def initialize_raw(*arguments, &block); end
  def internal_set_testing(*arguments, &block); end
  def metadata; end
  def parent; end
  def pixbuf(*arguments, &block); end
  def priv; end
  def read_stream_sync(*arguments, &block); end
  def render_cairo(*arguments, &block); end
  def render_cairo_sub(*arguments, &block); end
  def self.new_from_data(data); end
  def self.new_from_file(file_name, options = nil); end
  def set_base_gfile(*arguments, &block); end
  def set_base_uri(*arguments, &block); end
  def set_dpi(*arguments, &block); end
  def set_dpi_x(val); end
  def set_dpi_x_y(*arguments, &block); end
  def set_dpi_y(val); end
  def title; end
  def width; end
  def write(*arguments, &block); end
  extend GObjectIntrospection::Loader::VirtualFunctionImplementable
end
module Rsvg::Version
  def self.or_later?(major, minor, micro = nil); end
end
class Rsvg::HandleFlags < GLib::Flags
  def flag_keep_image_data?; end
  def flag_unlimited?; end
  def flags_none?; end
end
class Rsvg::PositionData
  def x; end
  def x=(value); end
  def y; end
  def y=(value); end
end
