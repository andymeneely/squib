cairo: antialias=(["subpixel"])
cairo: antialias=(["subpixel"])
cairo: antialias=(["subpixel"])
cairo: save([])
cairo: set_source_color([:white])
cairo: paint([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:white])
cairo: paint([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:white])
cairo: paint([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([15, 15, 795, 1095, 50, 50])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([30, 30, 128, 128, 25, 25])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([250, 55])
cairo: rotate([0])
cairo: translate([-250, -55])
cairo: move_to([250, 55])
pango: font_description=([MockDouble])
pango: text=(["Thief"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([250, 55])
cairo: rotate([0])
cairo: translate([-250, -55])
cairo: move_to([250, 55])
pango: font_description=([MockDouble])
pango: text=(["Grifter"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([250, 55])
cairo: rotate([0])
cairo: translate([-250, -55])
cairo: move_to([250, 55])
pango: font_description=([MockDouble])
pango: text=(["Mastermind"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:burnt_orange])
cairo: translate([65, 40])
cairo: rotate([0])
cairo: translate([-65, -40])
cairo: move_to([65, 40])
pango: font_description=([MockDouble])
pango: text=(["1"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:burnt_orange])
cairo: translate([65, 40])
cairo: rotate([0])
cairo: translate([-65, -40])
cairo: move_to([65, 40])
pango: font_description=([MockDouble])
pango: text=(["2"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:burnt_orange])
cairo: translate([65, 40])
cairo: rotate([0])
cairo: translate([-65, -40])
cairo: move_to([65, 40])
pango: font_description=([MockDouble])
pango: text=(["3"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 200])
cairo: rotate([0])
cairo: translate([-65, -200])
cairo: move_to([65, 200])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 200])
cairo: rotate([0])
cairo: translate([-65, -200])
cairo: move_to([65, 200])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 200])
cairo: rotate([0])
cairo: translate([-65, -200])
cairo: move_to([65, 200])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 300])
cairo: rotate([0])
cairo: translate([-65, -300])
cairo: move_to([65, 300])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 300])
cairo: rotate([0])
cairo: translate([-65, -300])
cairo: move_to([65, 300])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 300])
cairo: rotate([0])
cairo: translate([-65, -300])
cairo: move_to([65, 300])
pango: font_description=([MockDouble])
pango: text=(["Font strings are expressive!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 350])
cairo: rotate([0])
cairo: translate([-65, -350])
cairo: move_to([65, 350])
pango font: size=([16384])
pango: font_description=([MockDouble])
pango: text=(["Font string sizes can be overridden per card."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 350])
cairo: rotate([0])
cairo: translate([-65, -350])
cairo: move_to([65, 350])
pango font: size=([20480])
pango: font_description=([MockDouble])
pango: text=(["Font string sizes can be overridden per card."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 350])
cairo: rotate([0])
cairo: translate([-65, -350])
cairo: move_to([65, 350])
pango font: size=([24576])
pango: font_description=([MockDouble])
pango: text=(["Font string sizes can be overridden per card."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 400])
cairo: rotate([0])
cairo: translate([-65, -400])
cairo: move_to([65, 400])
pango: font_description=([MockDouble])
pango: text=(["This text has fixed width, fixed height, center-aligned, middle-valigned, and has a red hint"])
pango: width=([307200])
pango: height=([128000])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment center>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 400, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 400])
cairo: rotate([0])
cairo: translate([-65, -400])
cairo: move_to([65, 400])
pango: font_description=([MockDouble])
pango: text=(["This text has fixed width, fixed height, center-aligned, middle-valigned, and has a red hint"])
pango: width=([307200])
pango: height=([128000])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment center>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 400, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 400])
cairo: rotate([0])
cairo: translate([-65, -400])
cairo: move_to([65, 400])
pango: font_description=([MockDouble])
pango: text=(["This text has fixed width, fixed height, center-aligned, middle-valigned, and has a red hint"])
pango: width=([307200])
pango: height=([128000])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment center>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 400, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 550])
cairo: rotate([0])
cairo: translate([-65, -550])
cairo: move_to([65, 550])
pango font: size=([16384])
pango: font_description=([MockDouble])
pango: text=(["Ink extent return value"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 550])
cairo: rotate([0])
cairo: translate([-65, -550])
cairo: move_to([65, 550])
pango font: size=([20480])
pango: font_description=([MockDouble])
pango: text=(["Ink extent return value"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 550])
cairo: rotate([0])
cairo: translate([-65, -550])
cairo: move_to([65, 550])
pango font: size=([24576])
pango: font_description=([MockDouble])
pango: text=(["Ink extent return value"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color([:black])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: rounded_rectangle([60, 545, 10, 10, 10, 10])
cairo: set_source_color(["#0000"])
cairo: fill([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([450, 400])
cairo: rotate([0])
cairo: translate([-450, -400])
cairo: move_to([450, 400])
pango: font_description=([MockDouble])
pango: text=(["Ellipsization!\nThe ultimate question of life, the universe, and everything to life and everything is 42"])
pango: width=([286720])
pango: height=([184320])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([450, 400, 0, 0, 0, 0])
cairo: set_source_color([:green])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([450, 400])
cairo: rotate([0])
cairo: translate([-450, -400])
cairo: move_to([450, 400])
pango: font_description=([MockDouble])
pango: text=(["Ellipsization!\nThe ultimate question of life, the universe, and everything to life and everything is 42"])
pango: width=([286720])
pango: height=([184320])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([450, 400, 0, 0, 0, 0])
cairo: set_source_color([:green])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([450, 400])
cairo: rotate([0])
cairo: translate([-450, -400])
cairo: move_to([450, 400])
pango: font_description=([MockDouble])
pango: text=(["Ellipsization!\nThe ultimate question of life, the universe, and everything to life and everything is 42"])
pango: width=([286720])
pango: height=([184320])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([450, 400, 0, 0, 0, 0])
cairo: set_source_color([:green])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 625])
cairo: rotate([0])
cairo: translate([-65, -625])
cairo: move_to([65, 625])
pango: font_description=([MockDouble])
pango: text=(["Text hints are also globally togglable!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 625, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 625])
cairo: rotate([0])
cairo: translate([-65, -625])
cairo: move_to([65, 625])
pango: font_description=([MockDouble])
pango: text=(["Text hints are also globally togglable!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 625, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 625])
cairo: rotate([0])
cairo: translate([-65, -625])
cairo: move_to([65, 625])
pango: font_description=([MockDouble])
pango: text=(["Text hints are also globally togglable!"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([65, 625, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 625])
cairo: rotate([0])
cairo: translate([-565, -625])
cairo: move_to([565, 625])
pango: font_description=([MockDouble])
pango: text=(["See? No hint here."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 625])
cairo: rotate([0])
cairo: translate([-565, -625])
cairo: move_to([565, 625])
pango: font_description=([MockDouble])
pango: text=(["See? No hint here."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 625])
cairo: rotate([0])
cairo: translate([-565, -625])
cairo: move_to([565, 625])
pango: font_description=([MockDouble])
pango: text=(["See? No hint here."])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 675])
cairo: rotate([0.2])
cairo: translate([-565, -675])
cairo: move_to([565, 675])
pango: font_description=([MockDouble])
pango: text=(["Rotated"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([565, 675, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 675])
cairo: rotate([0.2])
cairo: translate([-565, -675])
cairo: move_to([565, 675])
pango: font_description=([MockDouble])
pango: text=(["Rotated"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([565, 675, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([565, 675])
cairo: rotate([0.2])
cairo: translate([-565, -675])
cairo: move_to([565, 675])
pango: font_description=([MockDouble])
pango: text=(["Rotated"])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([565, 675, 0, 0, 0, 0])
cairo: set_source_color([:red])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 700])
cairo: rotate([0])
cairo: translate([-65, -700])
cairo: move_to([65, 700])
pango: font_description=([MockDouble])
pango: text=(["This is left-justified text.\nWhat do you know about tweetle beetles? well... \nWhen tweetle beetles fight, it's called a tweetle beetle battle. And when they battle in a puddle, it's a tweetle beetle puddle battle. AND when tweetle beetles battle with paddles in a puddle, they call it a tweetle beetle puddle paddle battle. AND... When beetles battle beetles in a puddle paddle battle and the beetle battle puddle is a puddle in a bottle... ..they call this a tweetle beetle bottle puddle paddle battle muddle. AND... When beetles fight these battles in a bottle with their paddles and the bottle's on a poodle and the poodle's eating noodles... ...they call this a muddle puddle tweetle poodle beetle noodle bottle paddle battle."])
pango: width=([691200.0])
pango: height=([307200.0])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([true])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 700])
cairo: rotate([0])
cairo: translate([-65, -700])
cairo: move_to([65, 700])
pango: font_description=([MockDouble])
pango: text=(["This is left-justified text.\nWhat do you know about tweetle beetles? well... \nWhen tweetle beetles fight, it's called a tweetle beetle battle. And when they battle in a puddle, it's a tweetle beetle puddle battle. AND when tweetle beetles battle with paddles in a puddle, they call it a tweetle beetle puddle paddle battle. AND... When beetles battle beetles in a puddle paddle battle and the beetle battle puddle is a puddle in a bottle... ..they call this a tweetle beetle bottle puddle paddle battle muddle. AND... When beetles fight these battles in a bottle with their paddles and the bottle's on a poodle and the poodle's eating noodles... ...they call this a muddle puddle tweetle poodle beetle noodle bottle paddle battle."])
pango: width=([691200.0])
pango: height=([307200.0])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([true])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([65, 700])
cairo: rotate([0])
cairo: translate([-65, -700])
cairo: move_to([65, 700])
pango: font_description=([MockDouble])
pango: text=(["This is left-justified text.\nWhat do you know about tweetle beetles? well... \nWhen tweetle beetles fight, it's called a tweetle beetle battle. And when they battle in a puddle, it's a tweetle beetle puddle battle. AND when tweetle beetles battle with paddles in a puddle, they call it a tweetle beetle puddle paddle battle. AND... When beetles battle beetles in a puddle paddle battle and the beetle battle puddle is a puddle in a bottle... ..they call this a tweetle beetle bottle puddle paddle battle muddle. AND... When beetles fight these battles in a bottle with their paddles and the bottle's on a poodle and the poodle's eating noodles... ...they call this a muddle puddle tweetle poodle beetle noodle bottle paddle battle."])
pango: width=([691200.0])
pango: height=([307200.0])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([true])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([50, 1000])
cairo: rotate([0])
cairo: translate([-50, -1000])
cairo: move_to([50, 1000])
pango: font_description=([MockDouble])
pango: text=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: markup=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: width=([768000])
pango: height=([102400])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: move_to([50, 1000])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([50, 1000, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([50, 1000])
cairo: rotate([0])
cairo: translate([-50, -1000])
cairo: move_to([50, 1000])
pango: font_description=([MockDouble])
pango: text=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: markup=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: width=([768000])
pango: height=([102400])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: move_to([50, 1000])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([50, 1000, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
cairo: save([])
cairo: set_source_color([:black])
cairo: translate([50, 1000])
cairo: rotate([0])
cairo: translate([-50, -1000])
cairo: move_to([50, 1000])
pango: font_description=([MockDouble])
pango: text=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: markup=(["<b>Markup</b> is also <i>quite</i> <s>easy</s> awesome"])
pango: width=([768000])
pango: height=([102400])
pango: wrap=([#<Pango::Layout::WrapMode word-char>])
pango: ellipsize=([#<Pango::Layout::EllipsizeMode end>])
pango: alignment=([#<Pango::Layout::Alignment left>])
pango: justify=([false])
pango: spacing=([0])
cairo: update_pango_layout([MockDouble])
cairo: move_to([50, 1000])
cairo: update_pango_layout([MockDouble])
cairo: show_pango_layout([MockDouble])
cairo: rounded_rectangle([50, 1000, 0, 0, 0, 0])
cairo: set_source_color([:cyan])
cairo: set_line_width([2.0])
cairo: stroke([])
cairo: restore([])
surface: write_to_png(["_output/text_00.png"])
surface: write_to_png(["_output/text_01.png"])
surface: write_to_png(["_output/text_02.png"])
